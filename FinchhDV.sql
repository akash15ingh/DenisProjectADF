-- List all distinct Product Categories sold.
select distinct categoryName,subcategoryName,productName 
from denisdata;

-- Find total number of sales records.
select count(*) as TotalSalesRecords 
from denisdata;

-- Get all sales made by Heather Moon.
select *
from denisdata d
where d.name='Heather Moon';


-- Find the minimum UnitPrice and maximum UnitPrice.
select min(unitprice) as MinUnitPrice,
max(unitprice) as MaxUnitPrice
from denisdata;

-- List all Regions where sales happened.
select saleid,
region
from denisdata
where saleid is not null
order by region;

-- Calculate total UnitsSold per Category.
select * from denisdata;
select categoryname as Category,
sum(unitsSold) as TotalUnitsSold
from denisdata d
group by categoryname
order by TotalUnitsSold desc;

-- Find all sales where UnitsSold > 10.
select *
from denisdata
where UnitsSold>10;

-- Retrieve sales where TotalRevenue > 500 and Region = 'West'.
select *
from denisdata
where TotalRevenue > 500 and Region = 'West';

-- List Products sold in 'Las Vegas' city along with UnitsSold.
select productname,
sum(unitssold) as TotalUnitsSold
from denisdata
where city='Las Vegas'
group by productname
order by TotalUnitsSold desc;

-- Find out the earliest and latest Sale Date for each Sales Rep.
select column_name,data_type
from information_schema.columns
where table_name='denisdata'
and column_name='date';

alter table denisdata
modify column date Date;

select name,
min(date) as earliest,
max(date) as Latest
from denisdata
group by name;

-- Find the Top 3 Products by TotalRevenue.
select productname,
sum(totalrevenue) as Totalrevenue
from denisdata d
group by productname
order by totalrevenue desc
limit 3;

select productName,totalrevenue
from (select productname,
sum(totalrevenue) as totalrevenue 
from denisdata 
group by productname
order by totalrevenue desc) b
limit 3;


with cte as(select productname,
sum(totalrevenue) as TotalRevenue,
dense_rank() over(order by sum(totalrevenue) desc) as rnk
from denisdata
group by 1)
select * from cte
where rnk<=3;


-- Show total revenue generated by each State.
select state,
round(sum(totalrevenue),2) as Totalrevenue
from denisdata
group by state
order by totalrevenue desc;

-- Find the total revenue generated by each Sales Rep.
select name,
sum(totalrevenue) as totalrevenue
from denisdata
group by name
order by totalrevenue desc;

-- List the number of unique cities in each Region.
select region,
count(distinct city) as cities
from denisdata
group by region 
order by cities desc;

-- Which SubCategory generated the maximum revenue overall?
select subcategoryname,
sum(totalrevenue) as MaxRevenue
from denisdata
group by subcategoryname
order by MaxRevenue desc
limit 1;


with cte as (select subcategoryname,
sum(totalrevenue) as MaxRevenue,
dense_rank() over(order by sum(totalrevenue) desc) as rnk
from denisdata
group by subcategoryname )
select subcategoryname,
MaxRevenue
from cte 
where rnk=1;

-- Calculate profit per sale record (Assume: Profit = (UnitPrice - UnitCost) Ã— UnitsSold).

select saleid,
sum((unitprice-unitcost)*unitssold) as profit
from denisdata
group by saleid
order by profit desc;

-- Identify Sales Reps who were hired after 2023 and made sales.
select name,
Hire_year,
hiredate from (select name,
hiredate,
year(hiredate) as Hire_year
from denisdata) b
where hire_year>'2023';



-- Rank Products within each Category based on TotalRevenue.
with cte as (select categoryname,
productname,
round(sum(totalrevenue),0) as TotalRevenue,
dense_rank() over(partition by categoryname order by sum(totalrevenue) desc) as rnk
from denisdata
group by categoryname,productname)
select categoryname as Category,
productname as Product,
TotalRevenue
from cte
where rnk=1;


-- Find the average UnitsSold per SubCategory across all states.
select SubCategoryName as subcategory,
State,
round(avg(UnitsSold),2) as AvgUnitsSold
from denisdata 
group by SubCategoryName,State
order by state,AvgUnitsSold desc;

-- Identify if any Product has been sold in more than 3 different states.
select productname as Product,
count(distinct state) as numstateSold
from denisdata
group by productname
having count(distinct state)>3;

-- For each Sales Rep, calculate the number of years between HireDate and SaleDate.
select name,
timestampdiff(year,date,hiredate) as numofYears,
case
when timestampdiff(year,date,hiredate)<=1 then '0-1 years'
when timestampdiff(year,date,hiredate) between 2 and 5 then '2-5 years'
else '6+ years'
end as YearsDifference
from denisdata;

-- Find products whose UnitCost is more than 50% of UnitPrice.
select productname,
sum(UnitCost) as TotalUnitCost,
sum(UnitPrice) as TotalUnitPrice
from denisdata
group by productname
having sum(UnitCost)> 0.5*sum(UnitPrice);



-- Find top 2 Cities in each State based on total UnitsSold.
with cte as (select state,
city,
sum(UnitsSold) as TotalUnitsSold,
dense_rank() over(partition by state order by sum(UnitsSold) desc) as rnk
from denisdata
group by state,city)
select state,
city,
TotalUnitsSold
from cte 
where rnk<=2;

-- Identify if any two products have exactly the same UnitPrice and UnitCost.
with cte as (select productname,
UnitCost,
UnitPrice,
count(distinct productname) as cnt
from denisdata
group by 1,2,3)
select productname,
unitcost,
unitprice
from cte 
where cnt>1;
select * from denisdata
order by hiredate desc;


-- Find monthly trend of TotalRevenue (Year-Month based).
with cte as (select year(date) as saleyear,
month(date) as salemonth,
sum(Totalrevenue) as CurrentMnthRevenue
from denisdata
group by year(date),month(date)
),
cte2 as (select Saleyear,
Salemonth,
CurrentMnthRevenue,
lag(CurrentMnthRevenue) over(order by Saleyear,Salemonth) as PreviousMnthRevenue
from cte)
select Saleyear,
Salemonth,
CurrentMnthRevenue,
PreviousMnthRevenue,
concat(round(((CurrentMnthRevenue-PreviousMnthRevenue)/PreviousMnthRevenue),2),'%') as PercentChange
from cte2;
